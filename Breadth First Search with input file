import java.io.File;
import java.io.FileNotFoundException;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;


public class BFS 
{
  public static void main(String[] args) throws FileNotFoundException 
	{
		File f = new File("graph.in");
		Scanner scan = new Scanner(System.in);
                int cases = scan.nextInt();
		for(int index = 0; index < cases ; index ++)
		{
			int nodes =scan.nextInt();
			int edges = scan.nextInt();
			int [] [] al = new int [nodes] [nodes];
			int [] deg = new int [nodes];
			for(int i =0; i<edges; i++)
			{
				int u =scan.nextInt();
				int v = scan.nextInt();
				al [u] [deg[u]++] = v ;
				al[v] [deg[v] ++] = u;
			}
			justBfs(al, deg);
			System.out.println();
		}
		
	}
  public static void justBfs(int [] [] a, int [] d)
  {
		Queue <Integer> q = new LinkedList <Integer> ();
		int [] color =new int [d.length];
		int u,v;
		for(int i =0; i<d.length; i++)
		{
			if(color[i] == 0)
			{
				q.offer(i);
				color[i] = 1;
				while(!q.isEmpty())
				{
					u = q.poll();
					color[u] = 2;
					System.out.print(u + " ");
					for(int j =0; j<d[u]; j++)
					{
						v = a[u][j];
						if(color[v] == 0)
						{
							q.offer(v);
							color[v] = 1;
						}
					}
				}
			}
		}
	}
}
